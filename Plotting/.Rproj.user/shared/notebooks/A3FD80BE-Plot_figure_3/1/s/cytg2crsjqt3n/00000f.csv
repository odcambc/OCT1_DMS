"0","# Kir2.1 construct (with FLAG tag) sequence"
"0",""
"0","kir21_wt_fasta = ""Kir21.fasta"""
"0",""
"0","con=file(kir21_wt_fasta,open=""r"")"
"0","kir21_wt = readLines(con)[2]"
"2","Warning in readLines(con) :"
"2","
 "
"2"," incomplete final line found on 'Kir21.fasta'
"
"0","close(con)"
"0",""
"0","# Baseline libraries and raw sequencing counts"
"0",""
"0","# In codons"
"0","vatd_chunk_starts = c(1, 42, 85, 127, 169)"
"0","vatd_chunk_ends = c(41, 84, 126, 168, 209)"
"0","vatd_chunks = mapply(c, vatd_chunk_starts, vatd_chunk_ends, SIMPLIFY=FALSE)"
"0",""
"0","kir21_chunk_starts = c(1, 49, 99, 148, 197, 246, 293, 341, 389)"
"0","kir21_chunk_ends = c(48, 98, 147, 196, 245, 292, 340, 388, 436)"
"0","kir21_chunks = mapply(c, kir21_chunk_starts, kir21_chunk_ends, SIMPLIFY=FALSE)"
"0",""
"0","trpv1_chunk_starts = c(1, 50, 101, 151, 201, 251, 300, 349, 398, 447, 496, 545, 594, 643, 692, 741, 791)"
"0","trpv1_chunk_ends = c(49, 100, 150, 200, 250, 299, 348, 397, 446, 495, 544, 593, 642, 691, 740, 790, 838)"
"0","TRPV1_chunks = mapply(c, trpv1_chunk_starts, trpv1_chunk_ends, SIMPLIFY=FALSE)"
"0",""
"0","mor_chunks_starts = c(1, 50, 101, 151, 201, 251, 300, 349, 398)"
"0","mor_chunks_ends = c(49, 100, 150, 200, 250, 299, 348, 397, 400)"
"0","mor_chunks = mapply(c, mor_chunks_starts, mor_chunks_ends, SIMPLIFY=FALSE)"
"0","  "
"0","variantCounts_colnames <- c(""count"", ""pos"", ""chunk_pos"", ""chunk"", ""mutation_type"", ""name"", ""codon"", ""variants"", ""length"", ""hgvs"")"
"0","variantCounts_cotypes = ""_iiiicccccc"""
"0",""
"0","baseline_file = '../data/counts/Kir21/baseline.csv'"
"0","baseline <- read_csv(baseline_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","vatd_t0_file = '../data/counts/VatD/t0.csv'"
"0","vatd_t0 <- read_csv(vatd_t0_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","trpv1_1_9_file = '../data/counts/TRPV1_MiSeq_QC/TRPV1_1-9.csv'"
"0","trpv1_1_9 <- read_csv(trpv1_1_9_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0","trpv1_9_17_file = '../data/counts/TRPV1_MiSeq_QC/TRPV1_9-17.csv'"
"0","trpv1_9_17 <- read_csv(trpv1_9_17_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","TRPV1_overlap9_variants <- bind_rows(trpv1_1_9, trpv1_9_17) %>% group_by(hgvs, pos, chunk, chunk_pos, mutation_type, name, codon, variants, length) %>% summarize(count = sum(count))"
"1","[38;5;232m`summarise()` has grouped output by 'hgvs', 'pos', 'chunk', 'chunk_pos', 'mutation_type', 'name', 'codon', 'variants'. You can override using the
`.groups` argument.[39m
"
"0","trpv1_N1_file = '../data/counts/TRPV1_MiSeq_QC/TRPV1_N1.csv'"
"0","trpv1_N1 <- read_csv(trpv1_N1_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0","trpv1_N2_file = '../data/counts/TRPV1_MiSeq_QC/TRPV1_N2.csv'"
"0","trpv1_N2 <- read_csv(trpv1_N2_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","TRPV1_N_variants <- bind_rows(trpv1_N1, trpv1_N2) %>% group_by(hgvs, pos, chunk, chunk_pos, mutation_type, name, codon, variants, length) %>% summarize(count = sum(count))"
"1","[38;5;232m`summarise()` has grouped output by 'hgvs', 'pos', 'chunk', 'chunk_pos', 'mutation_type', 'name', 'codon', 'variants'. You can override using the
`.groups` argument.[39m
"
"0","MOR_file = '../data/counts/MOR/library.csv'"
"0","MOR <- read_csv(MOR_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","# Kir2.1 Enrich2 score files"
"0","kir_scores_file = ""../data/Enrich2/Kir2.1_sorting/tsv/Kir21_indel_exp/main_identifiers_scores.tsv"""
"0",""
"0","kir_variantscore_colnames <- c(""hgvs"", ""A_SE"", ""A_epsilon"", ""A_score"", ""S_SE"", ""S_epsilon"", ""S_score"", ""SA_SE"", ""SA_epsilon"", ""SA_score"")"
"0","kir_variantscore_coltypes <- c(""character"", ""numeric"", ""numeric"", ""numeric"", ""numeric"", ""numeric"", ""numeric"", ""numeric"", ""numeric"", ""numeric"")"
"0",""
"0","kir_scores <- read_delim(kir_scores_file, col_names = kir_variantscore_colnames, skip=3)"
"1","[1mRows: [22m[34m11055[39m [1mColumns: [22m[34m10[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m ""\t""
[31mchr[39m (1): hgvs
[32mdbl[39m (9): A_SE, A_epsilon, A_score, S_SE, S_epsilon, S_score, SA_SE, SA_epsilon, SA_score
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","kir_scores <- process_hgvs_df(kir_scores)"
"0","kir_scores$is.wt = kir_scores$mutation_type == ""S"""
"0","kir_scores$delta_score = kir_scores$SA_score - kir_scores$A_score"
"0",""
"0","# Make this a long df rather than wide"
"0",""
"0","kir_scores_long <- kir_scores %>% "
"0","  pivot_longer(cols = ends_with(""_score""), names_to=""condition"", names_pattern = ""(.*)_score"", values_to = ""score"") %>%"
"0","  select(hgvs, pos, len, mutation_type, variants, score, condition)"
"0",""
"0","# Read Kir2.1 amplicon sequencing file to find spectrum of designed and non-desired mutations"
"0","Kir21_AEZ_c1_file = '../data/counts/Kir21_AEZ/Kir_c1.csv'"
"0","Kir21_AEZ_c1 <- read_csv(Kir21_AEZ_c1_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c2_file = '../data/counts/Kir21_AEZ/Kir_c2.csv'"
"0","Kir21_AEZ_c2 <- read_csv(Kir21_AEZ_c1_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c3_file = '../data/counts/Kir21_AEZ/Kir_c3.csv'"
"0","Kir21_AEZ_c3 <- read_csv(Kir21_AEZ_c3_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c4_file = '../data/counts/Kir21_AEZ/Kir_c4.csv'"
"0","Kir21_AEZ_c4 <- read_csv(Kir21_AEZ_c4_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c5b_file = '../data/counts/Kir21_AEZ/Kir_c5b.csv'"
"0","Kir21_AEZ_c5b <- read_csv(Kir21_AEZ_c5b_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c5a_file = '../data/counts/Kir21_AEZ/Kir_c5a.csv'"
"0","Kir21_AEZ_c5a <- read_csv(Kir21_AEZ_c5a_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c6a_file = '../data/counts/Kir21_AEZ/Kir_c6a.csv'"
"0","Kir21_AEZ_c6a <- read_csv(Kir21_AEZ_c6a_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c6b_file = '../data/counts/Kir21_AEZ/Kir_c6b.csv'"
"0","Kir21_AEZ_c6b <- read_csv(Kir21_AEZ_c6b_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c7_file = '../data/counts/Kir21_AEZ/Kir_c7.csv'"
"0","Kir21_AEZ_c7 <- read_csv(Kir21_AEZ_c7_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c9_file = '../data/counts/Kir21_AEZ/Kir_c7.csv'"
"0","Kir21_AEZ_c9 <- read_csv(Kir21_AEZ_c9_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c8a_file = '../data/counts/Kir21_AEZ/Kir_c8a.csv'"
"0","Kir21_AEZ_c8a <- read_csv(Kir21_AEZ_c8a_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
"0",""
"0","Kir21_AEZ_c8b_file = '../data/counts/Kir21_AEZ/Kir_c8b.csv'"
"0","Kir21_AEZ_c8b <- read_csv(Kir21_AEZ_c8b_file, skip = 1, col_names = variantCounts_colnames, col_types=variantCounts_cotypes)"
